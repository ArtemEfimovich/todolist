[{"C:\\ReactProject\\it-incubator\\src\\index.tsx":"1","C:\\ReactProject\\it-incubator\\src\\reportWebVitals.ts":"2","C:\\ReactProject\\it-incubator\\src\\state\\store.ts":"3","C:\\ReactProject\\it-incubator\\src\\App.tsx":"4","C:\\ReactProject\\it-incubator\\src\\state\\tasks-reducer.ts":"5","C:\\ReactProject\\it-incubator\\src\\state\\todolists-reducer.ts":"6","C:\\ReactProject\\it-incubator\\src\\AddItemForm.tsx":"7","C:\\ReactProject\\it-incubator\\src\\Todolist.tsx":"8","C:\\ReactProject\\it-incubator\\src\\api\\todolists-api.ts":"9","C:\\ReactProject\\it-incubator\\src\\EditableSpan.tsx":"10","C:\\ReactProject\\it-incubator\\src\\Task.tsx":"11"},{"size":641,"mtime":1611424226000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607869388000,"results":"14","hashOfConfig":"13"},{"size":967,"mtime":1629128175141,"results":"15","hashOfConfig":"13"},{"size":4848,"mtime":1629651998379,"results":"16","hashOfConfig":"13"},{"size":7547,"mtime":1629654715532,"results":"17","hashOfConfig":"13"},{"size":3669,"mtime":1629129990762,"results":"18","hashOfConfig":"13"},{"size":1474,"mtime":1594727720000,"results":"19","hashOfConfig":"13"},{"size":3752,"mtime":1629650279226,"results":"20","hashOfConfig":"13"},{"size":2520,"mtime":1629651667959,"results":"21","hashOfConfig":"13"},{"size":952,"mtime":1594154724000,"results":"22","hashOfConfig":"13"},{"size":1729,"mtime":1596076630000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8x0je0",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\ReactProject\\it-incubator\\src\\index.tsx",[],["49","50"],"C:\\ReactProject\\it-incubator\\src\\reportWebVitals.ts",[],"C:\\ReactProject\\it-incubator\\src\\state\\store.ts",[],"C:\\ReactProject\\it-incubator\\src\\App.tsx",["51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"C:\\ReactProject\\it-incubator\\src\\state\\tasks-reducer.ts",["65","66","67"],"C:\\ReactProject\\it-incubator\\src\\state\\todolists-reducer.ts",[],"C:\\ReactProject\\it-incubator\\src\\AddItemForm.tsx",["68","69","70"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\ReactProject\\it-incubator\\src\\Todolist.tsx",["71","72","73","74","75","76"],"C:\\ReactProject\\it-incubator\\src\\api\\todolists-api.ts",[],"C:\\ReactProject\\it-incubator\\src\\EditableSpan.tsx",[],"C:\\ReactProject\\it-incubator\\src\\Task.tsx",["77","78","79"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from './api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":12,"column":23,"nodeType":"86","messageId":"87","endLine":12,"endColumn":33},{"ruleId":"84","severity":1,"message":"88","line":16,"column":5,"nodeType":"86","messageId":"87","endLine":16,"endColumn":14},{"ruleId":"84","severity":1,"message":"89","line":17,"column":5,"nodeType":"86","messageId":"87","endLine":17,"endColumn":23},{"ruleId":"84","severity":1,"message":"90","line":19,"column":5,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"91","line":20,"column":5,"nodeType":"86","messageId":"87","endLine":20,"endColumn":17},{"ruleId":"84","severity":1,"message":"92","line":25,"column":33,"nodeType":"86","messageId":"87","endLine":25,"endColumn":45},{"ruleId":"93","severity":1,"message":"94","line":39,"column":7,"nodeType":"95","endLine":39,"endColumn":9,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":51,"column":8,"nodeType":"95","endLine":51,"endColumn":10,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"97","line":55,"column":8,"nodeType":"95","endLine":55,"endColumn":10,"suggestions":"99"},{"ruleId":"93","severity":1,"message":"97","line":62,"column":8,"nodeType":"95","endLine":62,"endColumn":10,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"97","line":67,"column":8,"nodeType":"95","endLine":67,"endColumn":10,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"97","line":72,"column":8,"nodeType":"95","endLine":72,"endColumn":10,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"97","line":77,"column":8,"nodeType":"95","endLine":77,"endColumn":10,"suggestions":"103"},{"ruleId":"93","severity":1,"message":"97","line":82,"column":8,"nodeType":"95","endLine":82,"endColumn":10,"suggestions":"104"},{"ruleId":"84","severity":1,"message":"105","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":11},{"ruleId":"84","severity":1,"message":"85","line":3,"column":58,"nodeType":"86","messageId":"87","endLine":3,"endColumn":68},{"ruleId":"84","severity":1,"message":"106","line":4,"column":9,"nodeType":"86","messageId":"87","endLine":4,"endColumn":23},{"ruleId":"84","severity":1,"message":"107","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":12},{"ruleId":"84","severity":1,"message":"108","line":2,"column":14,"nodeType":"86","messageId":"87","endLine":2,"endColumn":20},{"ruleId":"84","severity":1,"message":"109","line":2,"column":22,"nodeType":"86","messageId":"87","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"110","line":35,"column":7,"nodeType":"95","endLine":35,"endColumn":9,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"112","line":40,"column":8,"nodeType":"95","endLine":40,"endColumn":33,"suggestions":"113"},{"ruleId":"93","severity":1,"message":"112","line":47,"column":8,"nodeType":"95","endLine":47,"endColumn":45,"suggestions":"114"},{"ruleId":"93","severity":1,"message":"112","line":49,"column":86,"nodeType":"95","endLine":49,"endColumn":116,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"112","line":50,"column":92,"nodeType":"95","endLine":50,"endColumn":122,"suggestions":"116"},{"ruleId":"93","severity":1,"message":"112","line":51,"column":98,"nodeType":"95","endLine":51,"endColumn":128,"suggestions":"117"},{"ruleId":"93","severity":1,"message":"112","line":15,"column":97,"nodeType":"95","endLine":15,"endColumn":130,"suggestions":"118"},{"ruleId":"93","severity":1,"message":"112","line":20,"column":8,"nodeType":"95","endLine":20,"endColumn":41,"suggestions":"119"},{"ruleId":"93","severity":1,"message":"112","line":24,"column":8,"nodeType":"95","endLine":24,"endColumn":41,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'setTodosAc' is defined but never used.","Identifier","unusedVar","'addTaskAC' is defined but never used.","'changeTaskStatusAC' is defined but never used.","'fetchTasksTC' is defined but never used.","'removeTaskAC' is defined but never used.","'todolistsAPI' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["124"],["125"],["126"],["127"],["128"],["129"],["130"],"'v1' is defined but never used.","'TaskPriorities' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["131"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["132"],["133"],["134"],["135"],["136"],["137"],["138"],["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},{"desc":"140","fix":"143"},{"desc":"140","fix":"144"},{"desc":"140","fix":"145"},{"desc":"140","fix":"146"},{"desc":"140","fix":"147"},{"desc":"140","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"151","fix":"154"},{"desc":"151","fix":"155"},{"desc":"151","fix":"156"},{"desc":"151","fix":"157"},{"desc":"151","fix":"158"},{"desc":"151","fix":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},{"range":"162","text":"161"},{"range":"163","text":"161"},{"range":"164","text":"161"},{"range":"165","text":"161"},{"range":"166","text":"161"},{"range":"167","text":"161"},{"range":"168","text":"161"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"169","text":"170"},"Update the dependencies array to be: [props]",{"range":"171","text":"172"},{"range":"173","text":"172"},{"range":"174","text":"172"},{"range":"175","text":"172"},{"range":"176","text":"172"},{"range":"177","text":"172"},{"range":"178","text":"172"},{"range":"179","text":"172"},[1069,1071],"[dispatch]",[1479,1481],[1622,1624],[1912,1914],[2126,2128],[2330,2332],[2482,2484],[2666,2668],[1289,1291],"[dispatch, props.id]",[1399,1424],"[props]",[1637,1674],[1764,1794],[1888,1918],[2018,2048],[721,754],[1027,1060],[1217,1250]]